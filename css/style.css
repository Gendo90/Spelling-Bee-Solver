.hive {
    position: relative;
    width: 100%;
    height: 100%;
    padding-bottom: .2;

    .cell-letter {
            font-weight: 700;
            font-size: 1.875em;
            text-anchor: middle;
            text-transform: uppercase;
            pointer-events: none;
            font-family: Arial, Helvetica, sans-serif;
        }
}

.hive-cell {
    position: absolute;
    top: calc(100% / 3);
    left: 30%;
    width: 40%;
    height: calc(100% / 3);
    /* @include hive-cell($gray5);

    &:first-child {
        @include hive-cell($spelling-bee-gold);
    } */

    /* >.cell-fill.push-active {
        transform: scale3d(0.86, 0.86, 1);
        transform-origin: center center;
    } */
}

.center .cell-fill {
    fill: #f7da21;
}

.cell-fill {
    cursor: pointer;
    fill: #e6e6e6;;
    transition: all 100ms;
}

.sb-controls {
    position: relative;
    max-height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.sb-controls {
    width: 50vw;
    height: 50vh;
    max-width: 500px;
    z-index: 3;
    padding-bottom: 45px;
}

/* $hexcoords: (
    (0, 0),
    (-75%, -50%),
    (0, -100%),
    (75%, -50%),
    (75%, 50%),
    (0, 100%),
    (-75%, 50%)
);

@for $i from 1 to 8 {
    .hive-cell:nth-child(#{$i}) {
        transform: translate(nth(nth($hexcoords, $i), 1),
                nth(nth($hexcoords, $i), 2));
    }
} */

.hive-cell:nth-child(1) {
    transform: translate(0, 0);
}

.hive-cell:nth-child(2) {
    transform: translate(-75%, -50%);
}

.hive-cell:nth-child(3) {
    transform: translate(0, -100%);
}

.hive-cell:nth-child(4) {
    transform: translate(75%, -50%);
}

.hive-cell:nth-child(5) {
    transform: translate(75%, 50%);
}

.hive-cell:nth-child(6) {
    transform: translate(0, 100%);
}

.hive-cell:nth-child(7) {
    transform: translate(-75%, 50%);
}

#results {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 10px;

    font-family: Arial, Helvetica, sans-serif;

    font-size: 24px;
}